name: $(Build.BuildId)

trigger: none

variables:
  - group: MusicFeedVariables
  # Variables for connection names must be declared on pipeline level, otherwise pipeline will not start.
  - name: AWSConnectionName
    value: CodeFuller @ AWS
    readonly: true
  - name: aws.region
    value: $(GlobalConfig.AWS.Region)
    readonly: true
  - name: KubernetesConnectionName
    value: AWS EKS Cluster
    readonly: true

stages:
- template: delete-resources-template.yaml
  parameters:
    envName: test
    envDisplayName: Test

- template: delete-resources-template.yaml
  parameters:
    envName: prod
    envDisplayName: Production

- stage: DeleteDBServerStage
  displayName: Delete DB Server
  jobs:
  - deployment: DeleteDBServerJob
    displayName: Delete DB Server
    environment: aws
    pool:
      name: Azure Pipelines
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          # Stack postgres-volume is not deleted because the volume contains durable data.
          - task: CloudFormationDeleteStack@1
            displayName: 'Delete Stack: DB Server'
            inputs:
              awsCredentials: $(AWSConnectionName)
              stackName: db-server

- stage: DeleteClusterStage
  displayName: Delete EKS Cluster
  jobs:
  - deployment: DeleteClusterJob
    displayName: Delete EKS Cluster
    environment: aws
    pool:
      name: Azure Pipelines
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            displayName: Uninstall Kubernetes Dashboard
            inputs:
              connectionType: Kubernetes Service Connection
              kubernetesServiceConnection: $(KubernetesConnectionName)
              command: uninstall
              arguments: kubernetes-dashboard

          # We need to give some time for controllers to delete provisioned resources.
          # Otherwise following steps for EKS clean-up will fail due to existing dependencies.
          - powershell: Start-Sleep -Seconds 120
            displayName: Wait for Ingress Resources Deletion

          - task: CloudFormationDeleteStack@1
            displayName: 'Delete Stack: IAM Role for EKS ALB Controller'
            inputs:
              awsCredentials: $(AWSConnectionName)
              stackName: eks-iam-roles

          - task: CloudFormationDeleteStack@1
            displayName: 'Delete Stack: EKS Nodes Group'
            inputs:
              awsCredentials: $(AWSConnectionName)
              stackName: eks-nodes-group

          - task: CloudFormationDeleteStack@1
            displayName: 'Delete Stack: EKS Cluster'
            inputs:
              awsCredentials: $(AWSConnectionName)
              stackName: eks-cluster

          - task: CloudFormationDeleteStack@1
            displayName: 'Delete Stack: EKS VPC'
            inputs:
              awsCredentials: $(AWSConnectionName)
              stackName: eks-vpc
